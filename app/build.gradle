apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.github.kyrillosgait.gifnic"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 30
        versionName "0.3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            useProguard false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

ext {
    coroutinesVersion = '1.3.1'
    daggerVersion = '2.24'
    retrofitVersion = '2.6.1'
    glideVersion = '4.9.0'

    // Jetpack
    lifecycleVersion = '2.1.0'
    pagingVersion = '2.1.0'

    // Testing
    jUnit5Version = '5.5.1'
    mockKVersion = '1.9.3'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android X
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.activity:activity-ktx:1.0.0'
    implementation 'androidx.fragment:fragment-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta04'
    implementation 'com.google.android.material:material:1.1.0-alpha10'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.12.0'

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.4.0'

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.zlc.glide:webpdecoder:1.6.$glideVersion"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // OkHttp interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.1'

    // Pandora
    debugImplementation 'com.github.whataa:pandora:androidx_v2.0.5'

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'
}

// Android Jetpack
dependencies {
    // Lifecycle - ViewModel - LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
}

// Test dependencies
dependencies {
    // Android X Test
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation "androidx.test:rules:1.2.0"

    // Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Jetpack
    testImplementation "androidx.arch.core:core-testing:$lifecycleVersion"

    // JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnit5Version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnit5Version"

    // MockK
    testImplementation "io.mockk:mockk:$mockKVersion"
}

androidExtensions {
    experimental = true
}

kapt {
    correctErrorTypes = true // Non-existent type correction
    useBuildCache = true // Gradle build cache support (since 1.2.20)
    javacOptions {
        option("-Xmaxerrs", 500) // Increase the max count of errors from annotation processors.
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}